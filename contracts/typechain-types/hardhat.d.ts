/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "DynamicInvoiceToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DynamicInvoiceToken__factory>;
    getContractFactory(
      name: "DynamicInvoiceTokenDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DynamicInvoiceTokenDeployer__factory>;
    getContractFactory(
      name: "DynamicInvoiceTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DynamicInvoiceTokenFactory__factory>;
    getContractFactory(
      name: "IDynamicInvoiceToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceToken__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenActions__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenEvents__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenImmutables__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenState__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenDeployer__factory>;
    getContractFactory(
      name: "IDynamicInvoiceTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDynamicInvoiceTokenFactory__factory>;
    getContractFactory(
      name: "IPayChunkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPayChunkRegistry__factory>;
    getContractFactory(
      name: "ErrorLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorLibrary__factory>;
    getContractFactory(
      name: "PayChunkRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayChunkRegistry__factory>;
    getContractFactory(
      name: "EthereumProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EthereumProxy__factory>;
    getContractFactory(
      name: "IERC20FeeProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20FeeProxy__factory>;
    getContractFactory(
      name: "IEthereumFeeProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEthereumFeeProxy__factory>;
    getContractFactory(
      name: "IERC20ConversionProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20ConversionProxy__factory>;
    getContractFactory(
      name: "IEthConversionProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEthConversionProxy__factory>;
    getContractFactory(
      name: "IEthereumProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEthereumProxy__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "DynamicInvoiceToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DynamicInvoiceToken>;
    getContractAt(
      name: "DynamicInvoiceTokenDeployer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DynamicInvoiceTokenDeployer>;
    getContractAt(
      name: "DynamicInvoiceTokenFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DynamicInvoiceTokenFactory>;
    getContractAt(
      name: "IDynamicInvoiceToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceToken>;
    getContractAt(
      name: "IDynamicInvoiceTokenActions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenActions>;
    getContractAt(
      name: "IDynamicInvoiceTokenEvents",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenEvents>;
    getContractAt(
      name: "IDynamicInvoiceTokenImmutables",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenImmutables>;
    getContractAt(
      name: "IDynamicInvoiceTokenState",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenState>;
    getContractAt(
      name: "IDynamicInvoiceTokenDeployer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenDeployer>;
    getContractAt(
      name: "IDynamicInvoiceTokenFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDynamicInvoiceTokenFactory>;
    getContractAt(
      name: "IPayChunkRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPayChunkRegistry>;
    getContractAt(
      name: "ErrorLibrary",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorLibrary>;
    getContractAt(
      name: "PayChunkRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PayChunkRegistry>;
    getContractAt(
      name: "EthereumProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EthereumProxy>;
    getContractAt(
      name: "IERC20FeeProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20FeeProxy>;
    getContractAt(
      name: "IEthereumFeeProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEthereumFeeProxy>;
    getContractAt(
      name: "IERC20ConversionProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20ConversionProxy>;
    getContractAt(
      name: "IEthConversionProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEthConversionProxy>;
    getContractAt(
      name: "IEthereumProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEthereumProxy>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "DynamicInvoiceToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceToken>;
    deployContract(
      name: "DynamicInvoiceTokenDeployer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceTokenDeployer>;
    deployContract(
      name: "DynamicInvoiceTokenFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceTokenFactory>;
    deployContract(
      name: "IDynamicInvoiceToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceToken>;
    deployContract(
      name: "IDynamicInvoiceTokenActions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenActions>;
    deployContract(
      name: "IDynamicInvoiceTokenEvents",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenEvents>;
    deployContract(
      name: "IDynamicInvoiceTokenImmutables",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenImmutables>;
    deployContract(
      name: "IDynamicInvoiceTokenState",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenState>;
    deployContract(
      name: "IDynamicInvoiceTokenDeployer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenDeployer>;
    deployContract(
      name: "IDynamicInvoiceTokenFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenFactory>;
    deployContract(
      name: "IPayChunkRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPayChunkRegistry>;
    deployContract(
      name: "ErrorLibrary",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorLibrary>;
    deployContract(
      name: "PayChunkRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayChunkRegistry>;
    deployContract(
      name: "EthereumProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumProxy>;
    deployContract(
      name: "IERC20FeeProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20FeeProxy>;
    deployContract(
      name: "IEthereumFeeProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthereumFeeProxy>;
    deployContract(
      name: "IERC20ConversionProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20ConversionProxy>;
    deployContract(
      name: "IEthConversionProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthConversionProxy>;
    deployContract(
      name: "IEthereumProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthereumProxy>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "DynamicInvoiceToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceToken>;
    deployContract(
      name: "DynamicInvoiceTokenDeployer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceTokenDeployer>;
    deployContract(
      name: "DynamicInvoiceTokenFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DynamicInvoiceTokenFactory>;
    deployContract(
      name: "IDynamicInvoiceToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceToken>;
    deployContract(
      name: "IDynamicInvoiceTokenActions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenActions>;
    deployContract(
      name: "IDynamicInvoiceTokenEvents",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenEvents>;
    deployContract(
      name: "IDynamicInvoiceTokenImmutables",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenImmutables>;
    deployContract(
      name: "IDynamicInvoiceTokenState",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenState>;
    deployContract(
      name: "IDynamicInvoiceTokenDeployer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenDeployer>;
    deployContract(
      name: "IDynamicInvoiceTokenFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDynamicInvoiceTokenFactory>;
    deployContract(
      name: "IPayChunkRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPayChunkRegistry>;
    deployContract(
      name: "ErrorLibrary",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorLibrary>;
    deployContract(
      name: "PayChunkRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayChunkRegistry>;
    deployContract(
      name: "EthereumProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EthereumProxy>;
    deployContract(
      name: "IERC20FeeProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20FeeProxy>;
    deployContract(
      name: "IEthereumFeeProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthereumFeeProxy>;
    deployContract(
      name: "IERC20ConversionProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20ConversionProxy>;
    deployContract(
      name: "IEthConversionProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthConversionProxy>;
    deployContract(
      name: "IEthereumProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEthereumProxy>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
