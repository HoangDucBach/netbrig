/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EthereumProxy,
  EthereumProxyInterface,
} from "../../../contracts/request-network/EthereumProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "paymentReference",
        type: "bytes",
      },
    ],
    name: "TransferWithReference",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_paymentReference",
        type: "bytes",
      },
    ],
    name: "transferWithReference",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061025e8061001f6000396000f3fe6080604052600436106100225760003560e01c8063eb7d8df31461006f57600080fd5b3661006a5760405162461bcd60e51b81526020600482015260136024820152726e6f742070617961626c65207265636569766560681b60448201526064015b60405180910390fd5b600080fd5b61008261007d366004610185565b610084565b005b6000836001600160a01b03163460405160006040518083038185875af1925050503d80600081146100d1576040519150601f19603f3d011682016040523d82523d6000602084013e6100d6565b606091505b50509050806101275760405162461bcd60e51b815260206004820152601b60248201527f436f756c64206e6f74207061792074686520726563697069656e7400000000006044820152606401610061565b8282604051610137929190610218565b604080519182900382206001600160a01b0387168352346020840152917ff20789bd5e67749fbe748d26a9ffacd11036adee6a64a8dbc70cc37a98b4e542910160405180910390a250505050565b60008060006040848603121561019a57600080fd5b83356001600160a01b03811681146101b157600080fd5b9250602084013567ffffffffffffffff8111156101cd57600080fd5b8401601f810186136101de57600080fd5b803567ffffffffffffffff8111156101f557600080fd5b86602082840101111561020757600080fd5b939660209190910195509293505050565b818382376000910190815291905056fea2646970667358221220de71181357fd3cd140c17f2ff98da15eacb69d9422e462df377638496f208d9064736f6c634300081b0033";

type EthereumProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthereumProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthereumProxy__factory extends ContractFactory {
  constructor(...args: EthereumProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EthereumProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EthereumProxy__factory {
    return super.connect(runner) as EthereumProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthereumProxyInterface {
    return new Interface(_abi) as EthereumProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EthereumProxy {
    return new Contract(address, _abi, runner) as unknown as EthereumProxy;
  }
}
