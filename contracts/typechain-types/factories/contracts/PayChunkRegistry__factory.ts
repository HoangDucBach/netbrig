/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PayChunkRegistry,
  PayChunkRegistryInterface,
} from "../../contracts/PayChunkRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "ContractRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ETHEREUM_PROXY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816041565b506091565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b0806100a06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780637f3c2c28146100715780638c5b8385146100845780638da5cb5b146100d5578063dcc70c02146100e6578063f2fde38b14610120575b600080fd5b61006f610133565b005b61006f61007f366004610424565b610147565b6100b8610092366004610472565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546001600160a01b03166100b8565b6101136040518060400160405280600e81526020016d455448455245554d5f50524f585960901b81525081565b6040516100cc91906104ff565b61006f61012e366004610519565b6102a8565b61013b6102e6565b6101456000610313565b565b61014f6102e6565b6040518060400160405280600e81526020016d455448455245554d5f50524f585960901b8152506040516020016101869190610534565b60405160208183030381529060405280519060200120826040516020016101ad9190610534565b604051602081830303815290604052805190602001201461022c5760405162461bcd60e51b815260206004820152602e60248201527f5061794368756e6b52656769737472793a2054686520636f6e7472616374206e60448201526d185b59481a5cc81a5b9d985b1a5960921b60648201526084015b60405180910390fd5b8060018360405161023d9190610534565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f2a88e68a891ddb61f7aebfdeefd9fb74964fcd5371b692ea59cca73fc58f48059061029c9084908490610550565b60405180910390a15050565b6102b06102e6565b6001600160a01b0381166102da57604051631e4fbdf760e01b815260006004820152602401610223565b6102e381610313565b50565b6000546001600160a01b031633146101455760405163118cdaa760e01b8152336004820152602401610223565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261038a57600080fd5b813567ffffffffffffffff8111156103a4576103a4610363565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156103d3576103d3610363565b6040528181528382016020018510156103eb57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461041f57600080fd5b919050565b6000806040838503121561043757600080fd5b823567ffffffffffffffff81111561044e57600080fd5b61045a85828601610379565b92505061046960208401610408565b90509250929050565b60006020828403121561048457600080fd5b813567ffffffffffffffff81111561049b57600080fd5b6104a784828501610379565b949350505050565b60005b838110156104ca5781810151838201526020016104b2565b50506000910152565b600081518084526104eb8160208601602086016104af565b601f01601f19169290920160200192915050565b60208152600061051260208301846104d3565b9392505050565b60006020828403121561052b57600080fd5b61051282610408565b600082516105468184602087016104af565b9190910192915050565b60408152600061056360408301856104d3565b905060018060a01b0383166020830152939250505056fea264697066735822122090c5806b0b0251d2546b20af4d088c32d439abd4632511ced17a2e220db6d40664736f6c634300081b0033";

type PayChunkRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayChunkRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayChunkRegistry__factory extends ContractFactory {
  constructor(...args: PayChunkRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PayChunkRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PayChunkRegistry__factory {
    return super.connect(runner) as PayChunkRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayChunkRegistryInterface {
    return new Interface(_abi) as PayChunkRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PayChunkRegistry {
    return new Contract(address, _abi, runner) as unknown as PayChunkRegistry;
  }
}
