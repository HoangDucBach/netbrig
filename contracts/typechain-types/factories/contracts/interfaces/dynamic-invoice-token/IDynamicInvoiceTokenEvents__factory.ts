/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDynamicInvoiceTokenEvents,
  IDynamicInvoiceTokenEventsInterface,
} from "../../../../contracts/interfaces/dynamic-invoice-token/IDynamicInvoiceTokenEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invoice",
        type: "address",
      },
    ],
    name: "DynamicInvoiceTokenCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invoice",
        type: "address",
      },
    ],
    name: "DynamicInvoiceTokenPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invoice",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "childInvoice",
        type: "address",
      },
    ],
    name: "DynamicInvoiceTokenSpawned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invoice",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "progress",
        type: "uint8",
      },
    ],
    name: "DynamicInvoiceTokenUpdateProgress",
    type: "event",
  },
] as const;

export class IDynamicInvoiceTokenEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IDynamicInvoiceTokenEventsInterface {
    return new Interface(_abi) as IDynamicInvoiceTokenEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDynamicInvoiceTokenEvents {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IDynamicInvoiceTokenEvents;
  }
}
